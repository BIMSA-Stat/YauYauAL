% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{NormalizedExp}
\alias{NormalizedExp}
\title{Normalized Exponential Function}
\usage{
NormalizedExp(x)
}
\arguments{
\item{x}{A numeric vector of type \code{arma::vec}. Contains the values to be processed
by the normalized exponential function.}
}
\value{
A numeric vector of type \code{arma::vec}, where each element is the normalized exponential
value of the corresponding input element. The sum of the output vector is guaranteed to be 1.
}
\description{
Computes the normalized exponential of a numeric vector. To prevent numerical overflow,
the input values are shifted by subtracting the maximum value of the vector. The function
then calculates the exponential of each shifted value and normalizes the result so that
the sum of the output vector equals 1. This is commonly used for probability distributions
or softmax operations in machine learning and numerical analysis.
}
\details{
The function performs the following steps:
\enumerate{
\item Finds the maximum value in the input vector \code{x}, denoted as \code{max_x}.
\item Shifts the input vector by subtracting \code{max_x}, creating a new vector \code{x_shifted}.
\item Computes the element-wise exponential of \code{x_shifted}.
\item Normalizes the exponential values by dividing by their sum, ensuring the output
lies in the range \eqn{[0, 1]} and the sum of the vector equals 1.
}
This normalization is particularly useful in scenarios where probabilities or relative
importance need to be derived from raw scores or unnormalized values.
}
\examples{
# Example: Normalizing a vector using the normalized exponential function
x <- c(1, 2, 3, 4)
result <- NormalizedExp(x)
print(result)

# Example: Handling a vector with large values
y <- c(1000, 1001, 1002)
result <- NormalizedExp(y)
print(result)

}
